{
  "name": "sethbergman/reactql-apollo-redux-auth",
  "version": "0.1.4",
  "libraries": {
    "xv": "^1.1.25"
  },
  "title": "Apollo ReactQL Redux Auth",
  "branch": "",
  "style": {
    "name": "Future",
    "componentSet": {
      "nav": "nav/BasicNav",
      "header": "header/BannerHeader",
      "article": "article/BasicArticle",
      "footer": "footer/BasicFooter"
    },
    "fontFamily": "\"Avenir Next\", Helvetica, sans-serif",
    "heading": {
      "fontWeight": 500,
      "textTransform": "uppercase",
      "letterSpacing": "0.2em"
    },
    "alternativeText": {
      "textTransform": "uppercase",
      "fontWeight": 400,
      "letterSpacing": "0.2em",
      "opacity": 0.75
    },
    "colors": {
      "text": "#333",
      "background": "#fff",
      "primary": "#666",
      "secondary": "#888",
      "highlight": "#1f80ff",
      "muted": "#f6f6f6",
      "border": "#eee"
    },
    "layout": {
      "centered": true,
      "maxWidth": 1024,
      "bannerHeight": "80vh"
    }
  },
  "content": [
    {
      "component": "nav",
      "links": [
        {
          "href": "https://github.com/sethbergman/reactql-apollo-redux-auth",
          "text": "GitHub"
        },
        {
          "href": "https://npmjs.com/package/auth",
          "text": "npm"
        }
      ]
    },
    {
      "component": "header",
      "heading": "reactql-apollo-redux-auth",
      "subhead": "Users, sessions and auth",
      "children": [
        {
          "component": "ui/TweetButton",
          "text": "reactql-apollo-redux-auth: Users, sessions and auth",
          "url": null
        },
        {
          "component": "ui/GithubButton",
          "user": "sethbergman",
          "repo": "reactql-apollo-redux-auth"
        }
      ],
      "text": "v2.3.0"
    },
    {
      "component": "article",
      "metadata": {
        "source": "github.readme"
      },
      "html": "<h1>Users, sessions and auth</h1>\n\n<p>This ReactQL project demonstrates one possible way you might implement user/password authorisation.</p>\n<p>It also adds <a href=\"http://passportjs.org/\">Passport.js</a> with a sample Facebook login.</p>\n<h2>Features</h2>\n<ul>\n<li>User sign-up form, with field validation (email validation via <a href=\"https://www.npmjs.com/package/isemail\">isemail</a>)</li>\n<li><a href=\"http://passportjs.org/\">Passport.js</a> integration</li>\n<li>User/password and Facebook login</li>\n<li>In-memory SQLite DB with <code>users</code> and <code>sessions</code> tables, running via <a href=\"http://docs.sequelizejs.com/\">Sequelize v4</a></li>\n<li>Server-side sessions. Deleting the DB entry remotely kills the session</li>\n<li>Password hashing via <a href=\"https://www.npmjs.com/package/bcrypt\">bcrypt</a></li>\n<li>GraphQL types representing users, sessions, <a href=\"https://www.npmjs.com/package/jsonwebtoken\">JWT tokens</a>, field errors</li>\n<li><a href=\"https://react.semantic-ui.com\">Semantic UI React</a> components and styling</li>\n<li>JWT tokens -- stored in both <code>localStorage</code> and via cookies, for subsequent SSR requests to render authenticated content on the server side, and for stateless environments such as mobile</li>\n<li>No modifications to the kit -- pure userland code</li>\n</ul>\n<h2>Video walk-through</h2>\n<p>I&apos;ve uploaded a 28 minute video on YouTube, which explains the concepts used in this project entitled <em>User authentication with GraphQL + DB + JWT</em></p>\n<p>Find it here:\n<a href=\"https://youtu.be/s1p4R4rzWUs\">https://youtu.be/s1p4R4rzWUs</a></p>\n<h2>Kit version</h2>\n<p>Based on ReactQL kit <a href=\"https://github.com/reactql/kit/releases/tag/2.8.5\">v2.8.5</a></p>\n"
    },
    {
      "component": "footer",
      "links": [
        {
          "href": "https://github.com/sethbergman/reactql-apollo-redux-auth",
          "text": "GitHub"
        },
        {
          "href": "https://github.com/sethbergman",
          "text": "sethbergman"
        }
      ]
    }
  ]
}